{"version":3,"sources":["store/dispatchers.js","store/reducers.js","pages/pageCv/Logo.jsx","components/Str.jsx","pages/pageCv/TableProjects.jsx","pages/pageCv/TableInfo.jsx","pages/pageCv/Cv.jsx","pages/pageCv/Controls.jsx","components/ControlFlipPage.jsx","components/DeployedDate.jsx","components/ContactInfo.jsx","components/PrintHeader.jsx","pages/pageCv/PageCv.jsx","pages/pageContact/PageContact.jsx","components/Footer.jsx","components/GridUtil.jsx","App.jsx","store/store.js","reportWebVitals.js","index.jsx"],"names":["disp","dispatch","toggleOrder","type","toggleLang","toggleNavbar","receivedCvData","data","receivedRepoData","saveLocal","key","val","Storage","localStorage","setItem","reducers","state","action","repo","navbarOpen","toString","lang","isAsc","Logo","height","width","color","id","viewBox","className","style","fill","stroke","strokeWidth","transform","rx","ry","cy","cx","r","d","defaultProps","Str","this","props","msg","trans","createLinks","str","links","match","processingIndex","length","buffer","reduce","buff","link","indexOfLink","indexOf","text","substr","push","linkElement","target","href","rel","subtextLength","React","Component","translation","PropTypes","oneOfType","string","shape","en","sk","connect","TableProjects","arrayOf","project","skill","projects","map","Row","Col","xs","TableInfo","title","sectionName","infoList","reverse","info","index","lg","label","value","reducer","dispatcher","Container","work","msgs","education","isVertical","groupClass","btnSize","btnClass","ButtonGroup","Button","outline","size","btns","viewSource","to","viewContact","onClick","orderByDateDesc","orderByDateAsc","changeLanguage","ControlFlipPage","orientation","format","date","pushed_at","ContactInfo","showIcons","contact","email","phone","cvLink","PrintHeader","Navbar","light","Collapse","isOpen","navbar","NavbarToggler","minHeight","isSpinning","isRotating","version","md","GridUtil","App","fetch","then","response","ok","json","Error","exact","path","component","PageCv","PageContact","settings","hasLocalStorage","getItem","loadLocal","defaultState","isLoading","createStore","reportWebVitals","onPerfEntry","Function","params","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.176c5837.chunk.js","sourcesContent":["export const disp = (dispatch) => ({\n  toggleOrder: () => dispatch({ type: 'TOGGLE_ORDER' }),\n  toggleLang: () => dispatch({ type: 'TOGGLE_LANG' }),\n  toggleNavbar: () => dispatch({ type: 'TOGGLE_NAVBAR' }),\n  receivedCvData: (data) => dispatch({ type: 'RECEIVED_CV_DATA', data }),\n  receivedRepoData: (data) => dispatch({ type: 'RECEIVED_REPO_DATA', data }),\n});\n\nexport default disp;\n","function saveLocal(key, val) {\n  if (typeof Storage !== 'undefined') {\n    localStorage.setItem(key, val);\n    // console.log('storing local', key, val)\n  }\n}\n\nconst reducers = (state = {}, action) => {\n  switch (action.type) {\n    case 'RECEIVED_REPO_DATA':\n      return {\n        ...state,\n        repo: action.data,\n      };\n    case 'RECEIVED_CV_DATA':\n      return {\n        ...state,\n        data: action.data,\n      };\n    case 'TOGGLE_NAVBAR': {\n      const navbarOpen = !state.navbarOpen;\n      saveLocal('navbarOpen', navbarOpen.toString());\n      return {\n        ...state,\n        navbarOpen,\n      };\n    }\n    case 'TOGGLE_LANG': {\n      const lang = state.lang === 'en' ? 'sk' : 'en';\n      saveLocal('lang', lang);\n      return {\n        ...state,\n        lang,\n      };\n    }\n    case 'TOGGLE_ORDER': {\n      const isAsc = !state.isAsc;\n      saveLocal('isAsc', isAsc.toString());\n      return {\n        ...state,\n        isAsc,\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const reducerLanguage = (state = {}) => ({ lang: state.lang });\n\nexport default reducers;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Logo = ({ height, width, color }) => (\n  <div id=\"logo\">\n    <svg\n      height={height}\n      width={width}\n      viewBox=\"0 0 100 100\"\n      className=\"anim-grow\"\n    >\n      <g\n        style={{\n          fill: 'none',\n          stroke: color,\n          strokeWidth: 0.8,\n        }}\n      >\n        <g transform=\"rotate(-8, 50, 50)\">\n          <ellipse\n            id=\"path4147\"\n            rx=\"46.681\"\n            ry=\"10.426\"\n            transform=\"matrix(-.37430 -.92731 .87601 -.48230 0 0)\"\n            cy=\"31.137\"\n            cx=\"-70.838\"\n          />\n          <ellipse\n            id=\"path4162\"\n            rx=\"12.386\"\n            ry=\"47.768\"\n            transform=\"matrix(.97745 .21117 -.66264 .74894 0 0)\"\n            cy=\"44.641\"\n            cx=\"78.695\"\n          />\n          <ellipse\n            id=\"path4164\"\n            rx=\"47.256\"\n            ry=\"11.284\"\n            transform=\"matrix(.98997 .14129 .038972 .99924 0 0)\"\n            cy=\"48.047\"\n            cx=\"48.685\"\n          />\n        </g>\n        <g\n          id=\"layer1\"\n          transform=\"translate(0)\"\n          style={{\n            strokeWidth: 0.7,\n          }}\n        >\n          <circle id=\"path4160\" r=\"7.0059\" cx=\"50.565\" cy=\"51.292\" />\n          <path id=\"path4166\" d=\"m43.646 50.318h13.772\" />\n          <path id=\"path4168\" d=\"m43.646 53.202h13.772\" />\n          <path id=\"path4170\" d=\"m44.328 48.209h12.345\" />\n          <path id=\"path4172\" d=\"m45.817 46.069h9.4299\" />\n          <path id=\"path4176\" d=\"m44.638 55.156h11.756\" />\n          <path id=\"path4178\" d=\"m46.871 57.265h7.29\" />\n          <ellipse\n            id=\"path4214\"\n            rx=\"6.2556\"\n            ry=\"6.9379\"\n            transform=\"scale(1,-1)\"\n            cy=\"-51.307\"\n            cx=\"50.487\"\n          />\n          <path\n            id=\"ellipse4216\"\n            transform=\"scale(1,-1)\"\n            d=\"m54.396-51.307a3.7686 6.9474 0 0 1 -3.7616 6.9474 3.7686 6.9474 0 0 1 -3.7756 -6.9216 3.7686 6.9474 0 0 1 3.7476 -6.9732 3.7686 6.9474 0 0 1 3.7895 6.8957\"\n          />\n          <path id=\"path4218\" d=\"m50.596 44.314c0.0098 5.2687 0.06617 10.17 0.06203 13.925\" />\n        </g>\n      </g>\n    </svg>\n  </div>\n);\n\nLogo.propTypes = {\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  color: PropTypes.string,\n};\n\nLogo.defaultProps = {\n  width: '100',\n  height: '100',\n  color: '#0475dc',\n};\n\nexport default Logo;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { reducerLanguage } from '../store/reducers';\n\nclass Str extends React.Component {\n  static createLinks(str) {\n    const links = str.match(/www\\.[\\w.]*/g);\n    let processingIndex = 0;\n    if (links && links.length > 0) {\n      const buffer = links.reduce((buff, link) => {\n        const indexOfLink = str.indexOf(link);\n        const text = str.substr(processingIndex, indexOfLink - processingIndex);\n        buff.push(<span key={buff.length}>{text}</span>);\n\n        processingIndex += text.length + link.length;\n        const linkElement = (\n          <a className=\"btn-link\" key={buff.length} target=\"_blank\" href={`http://${link}`} rel=\"noreferrer\">\n            {link}\n          </a>\n        );\n        buff.push(linkElement);\n        return buff;\n      }, []);\n\n      if (processingIndex < str.length) {\n        const subtextLength = str.length - processingIndex;\n        const text = str.substr(processingIndex, subtextLength);\n        buffer.push(<span key={buffer.length}>{text}</span>);\n      }\n\n      return buffer;\n    }\n    return str;\n  }\n\n  render() {\n    const { lang, msg, className } = this.props;\n    const trans = msg && msg[lang] ? msg[lang] : msg;\n    return trans ? <span className={className}>{Str.createLinks(trans)}</span> : null;\n  }\n}\n\nexport const translation = PropTypes.oneOfType([\n  PropTypes.string,\n  PropTypes.shape({\n    en: PropTypes.string,\n    sk: PropTypes.string,\n  }),\n]);\n\nStr.defaultProps = {\n  className: '',\n  msg: null,\n};\n\nStr.propTypes = {\n  lang: PropTypes.string.isRequired,\n  msg: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  className: PropTypes.string,\n};\n\nexport default connect(reducerLanguage, {})(Str);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Row } from 'reactstrap';\nimport Str, { translation } from '../../components/Str';\n\nexport const projects = PropTypes.arrayOf(PropTypes.shape({\n  project: translation,\n  skill: translation,\n}));\n\nexport const TableProjects = (props) => (\n  props.projects.map((project) => (\n    <Row key={project.project.en}>\n      <Col className=\"clearfix\" xs=\"12\">\n        <Str msg={project.project} className=\"ml-1 d-inline-block text-dark\" />\n        <Str msg={project.skill} className=\"float-right text-right text-secondary\" />\n      </Col>\n    </Row>\n  ))\n);\n\nTableProjects.propTypes = {\n  projects: projects.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Col, Row } from 'reactstrap';\nimport { projects, TableProjects } from './TableProjects';\nimport Str, { translation } from '../../components/Str';\n\nconst TableInfo = (props) => {\n  const {\n    title, sectionName, data, isAsc,\n  } = props;\n\n  const infoList = (function getInfoList() {\n    if (data) {\n      if (isAsc) {\n        return data;\n      }\n      return [...data].reverse();\n    }\n    return [];\n  }());\n\n  return (\n    <section className={`mb-4 ${sectionName}`}>\n      {title && (\n        <Row>\n          <Col>\n            <h5 className=\"text-label text-uppercase\">\n              <Str msg={title} />\n            </h5>\n          </Col>\n        </Row>\n      )}\n      {infoList.map((info, index) => (\n        <div\n          key={info.label.en ? info.label.en : info.label}\n          className={`entry${index === 0 ? ' first' : ''}`}\n        >\n          <Row>\n            <Col xs=\"5\" lg=\"4\" className={title ? 'text-primary' : 'text-dark'}>\n              <Str msg={info.label} className={title ? 'pl-1' : ''} />\n            </Col>\n            <Col\n              xs=\"7\"\n              lg=\"8\"\n              className={info.projects ? 'font-weight-bold  text-label' : 'text-dark'}\n            >\n              <Str msg={info.value} />\n            </Col>\n          </Row>\n          {info.projects && <TableProjects projects={info.projects} isAsc={isAsc} />}\n        </div>\n      ))}\n    </section>\n  );\n};\n\nTableInfo.propTypes = {\n  isAsc: PropTypes.bool,\n  title: translation,\n  sectionName: PropTypes.string.isRequired,\n  data: PropTypes.arrayOf(PropTypes.shape({\n    label: translation,\n    value: translation,\n    projects,\n  })).isRequired,\n};\n\nTableInfo.defaultProps = {\n  title: '',\n  isAsc: false,\n};\n\nexport default TableInfo;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { Container } from 'reactstrap';\nimport TableInfo from './TableInfo';\nimport msgs from '../../translations.json';\nimport dispatcher from '../../store/dispatchers';\nimport reducer from '../../store/reducers';\n\nconst Cv = ({ data, isAsc }) => (\n  <div id=\"cv-container\">\n    <div className=\"d-print-none mt-1 mt-md-2 mt-lg-4 mt-xl-5\" />\n    <Container>\n      <TableInfo data={data.info} isAsc sectionName=\"info\" />\n      <TableInfo\n        data={data.work}\n        title={msgs.title.work}\n        isAsc={isAsc}\n        sectionName=\"work\"\n      />\n      <TableInfo\n        data={data.education}\n        title={msgs.title.education}\n        isAsc={isAsc}\n        sectionName=\"education\"\n      />\n    </Container>\n  </div>\n);\n\nCv.propTypes = {\n  data: PropTypes.shape({\n    info: PropTypes.array,\n    education: PropTypes.array,\n    work: PropTypes.array,\n  }).isRequired,\n  isAsc: PropTypes.bool.isRequired,\n};\n\nexport default connect(reducer, dispatcher)(Cv);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ButtonGroup, Button } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as FontAwesome from 'react-icons/fa';\nimport msgs from '../../translations.json';\nimport Str from '../../components/Str';\nimport dispatcher from '../../store/dispatchers';\nimport reducer from '../../store/reducers';\n\nconst Controls = (props) => {\n  const {\n    isAsc, isVertical, toggleLang, toggleOrder,\n  } = props;\n  const groupClass = `d-flex ${\n    isVertical ? 'btn-group-vertical rounded-0' : 'ml-auto justify-content-end'\n  }`;\n  const btnSize = isVertical ? 'sm' : 'xs';\n  const btnClass = `d-flex align-items-center${\n    isVertical ? ' btn-block rounded-0' : ''\n  }`;\n\n  return (\n    <ButtonGroup className={groupClass}>\n      <Button\n        color=\"primary\"\n        outline\n        size={btnSize}\n        className={btnClass}\n        href=\"https://github.com/mnvmn\"\n        target=\"_blank\"\n      >\n        <FontAwesome.FaCodeBranch />\n        &nbsp;&nbsp;\n        <Str msg={msgs.btns.viewSource} />\n      </Button>\n      {isVertical && (\n        <Link to=\"/contact\" className={`btn btn-${btnSize} btn-outline-primary ${btnClass}`}>\n          <FontAwesome.FaMobile />\n          &nbsp;&nbsp;\n          <Str msg={msgs.btns.viewContact} />\n        </Link>\n      )}\n      {/* <Button\n          color=\"primary\"\n          outline\n          size={btnSize}\n          className={btnClass}\n          href=\"https://github.com/mnvmn/mnvmn.github.io/raw/master/CV_MN.pdf\"\n          target=\"_blank\"\n        >\n          <FontAwesome.FaDownload />\n          &nbsp;&nbsp;<Str msg={msgs.btns.downloadPdf} />\n        </Button> */}\n      <Button\n        color=\"primary\"\n        outline\n        size={btnSize}\n        className={btnClass}\n        onClick={toggleOrder}\n      >\n        <span className=\"\">\n          {isAsc ? <FontAwesome.FaSortAmountDown /> : <FontAwesome.FaSortAmountUp />}\n        </span>\n        &nbsp;&nbsp;\n        {' '}\n        {isAsc ? <Str msg={msgs.btns.orderByDateDesc} /> : <Str msg={msgs.btns.orderByDateAsc} />}\n      </Button>\n      <Button\n        color=\"primary\"\n        outline\n        size={btnSize}\n        className={btnClass}\n        onClick={toggleLang}\n      >\n        <FontAwesome.FaLanguage />\n        &nbsp;&nbsp;\n        <Str msg={msgs.btns.changeLanguage} />\n      </Button>\n    </ButtonGroup>\n  );\n};\n\nControls.propTypes = {\n  isAsc: PropTypes.bool.isRequired,\n  isVertical: PropTypes.bool.isRequired,\n  toggleLang: PropTypes.func.isRequired,\n  toggleOrder: PropTypes.func.isRequired,\n};\n\nexport default connect(reducer, dispatcher)(Controls);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'reactstrap';\nimport * as FontAwesome from 'react-icons/fa';\n\nconst ControlFlipPage = ({ orientation, className }) => (\n  <div\n    className={`control-flipPage-${orientation.toString()} d-print-none ${className}`}\n  >\n    <Button color=\"context\" size=\"md\" className=\"btn-vertical d-flex align-items-center\">\n      {orientation === 'right' && <FontAwesome.FaAngleRight />}\n      {orientation === 'left' && <FontAwesome.FaAngleLeft />}\n    </Button>\n  </div>\n);\n\nControlFlipPage.defaultProps = {\n  className: '',\n};\n\nControlFlipPage.propTypes = {\n  className: PropTypes.string,\n  orientation: PropTypes.string.isRequired,\n};\n\nexport default ControlFlipPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Moment from 'react-moment';\nimport { connect } from 'react-redux';\nimport dispatcher from '../store/dispatchers';\nimport reducer from '../store/reducers';\n\nconst DeployedDate = ({ repo }) => (\n  <Moment format=\"Do MMM YYYY\" date={repo.pushed_at} />\n);\n\nDeployedDate.propTypes = {\n  repo: PropTypes.shape({\n    pushed_at: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default connect(reducer, dispatcher)(DeployedDate);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as MatDesignIcons from 'react-icons/md';\nimport Str from './Str';\nimport dispatcher from '../store/dispatchers';\nimport reducer from '../store/reducers';\n\nconst ContactInfo = ({ showIcons, data }) => (\n  <div>\n    {data.contact && (\n      <div>\n        <div>\n          {showIcons && <MatDesignIcons.MdMailOutline className=\"mr-2\" />}\n          <Str msg={data.contact.email.value} />\n        </div>\n        <div>\n          {showIcons && <MatDesignIcons.MdPhone className=\"mr-2\" />}\n          <Str msg={data.contact.phone.value} />\n        </div>\n      </div>\n    )}\n  </div>\n);\n\nContactInfo.propTypes = {\n  showIcons: PropTypes.bool,\n  data: PropTypes.shape({\n    contact: PropTypes.object,\n  }).isRequired,\n};\n\nContactInfo.defaultProps = {\n  showIcons: false,\n};\n\nexport default connect(reducer, dispatcher)(ContactInfo);\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport DeployedDate from './DeployedDate';\nimport ContactInfo from './ContactInfo';\n\nconst cvLink = 'https://mnvmn.github.io';\n\nconst PrintHeader = () => (\n  <Container className=\"d-print-only\">\n    <Row>\n      <Col className=\"d-flex justify-content-between text-muted text-small\">\n        <ContactInfo />\n\n        <div>\n          <a href={cvLink}>{cvLink}</a>\n          <div className=\"text-right\">\n            <DeployedDate />\n          </div>\n        </div>\n      </Col>\n    </Row>\n  </Container>\n);\n\nexport default PrintHeader;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Container, Row, Col, Navbar, NavbarToggler, Collapse,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport Logo from './Logo';\nimport dispatcher from '../../store/dispatchers';\nimport reducer from '../../store/reducers';\nimport Cv from './Cv';\nimport Controls from './Controls';\nimport ControlFlipPage from '../../components/ControlFlipPage';\nimport PrintHeader from '../../components/PrintHeader';\n\nconst PageCv = ({ navbarOpen, toggleNavbar }) => (\n  <div id=\"pageCv\" className=\"page\">\n    <PrintHeader />\n\n    <Navbar color=\"faded\" light className=\"p-0 d-sm-none justify-content-end d-print-none\">\n      <Collapse isOpen={navbarOpen} navbar>\n        <Controls isVertical />\n      </Collapse>\n      <NavbarToggler onClick={toggleNavbar} className=\"mt-2 mr-2\" />\n    </Navbar>\n\n    <Container className=\"d-none d-sm-block d-print-none mt-2 mb-3\">\n      <Row className=\"d-flex align-items-center\">\n        <Col>\n          <Logo width={100} height={100} color=\"#0475dc\" />\n        </Col>\n        <Col>\n          <Controls isVertical={false} />\n        </Col>\n      </Row>\n    </Container>\n\n    <Container className=\"d-print-only d-block d-sm-none mt-2 mt-md-5 mb-3 mb-md-5\">\n      <h3 className=\"text-center text-dark mt-md-2\">CV</h3>\n    </Container>\n\n    <Cv />\n\n    <Link to=\"/contact\">\n      <ControlFlipPage orientation=\"right\" className=\"d-none d-sm-block\" />\n    </Link>\n  </div>\n);\n\nPageCv.propTypes = {\n  navbarOpen: PropTypes.bool.isRequired,\n  toggleNavbar: PropTypes.func.isRequired,\n};\n\nexport default connect(reducer, dispatcher)(PageCv);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Logo3d from 'react-3d-logo';\nimport dispatcher from '../../store/dispatchers';\nimport reducer from '../../store/reducers';\nimport ControlFlipPage from '../../components/ControlFlipPage';\n\nconst PagePoster = () => (\n  <div\n    id=\"pageLogo\"\n    className=\"page anim-enter d-flex align-items-center justify-content-center h-100\"\n    style={{ minHeight: '700px' }}\n  >\n    <Link to=\"/\">\n      <ControlFlipPage orientation=\"left\" />\n    </Link>\n\n    <div className=\"py-2 px-2 pt-lg-5 pb-lg-5\">\n      <Logo3d />\n      <Logo3d isSpinning />\n      <Logo3d isSpinning isRotating />\n    </div>\n  </div>\n);\n\nexport default connect(reducer, dispatcher)(PagePoster);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Col, Row } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport dispatcher from '../store/dispatchers';\nimport reducer from '../store/reducers';\nimport DeployedDate from './DeployedDate';\nimport ContactInfo from './ContactInfo';\n\nconst Footer = ({ repo }) => {\n  const { version } = React;\n  return (\n    <footer id=\"footer\" className=\"mt-auto d-print-none pt-2\">\n      <div className=\"d-flex align-items-center\">\n        <Container className=\"text-muted\">\n          <Row>\n            <Col>\n              <ContactInfo showIcons />\n            </Col>\n\n            <Col xs={12} md=\"auto\" className=\"text-sm text-md-right\">\n              <div>\n                {repo.pushed_at ? (\n                  <span>\n                    <span>Deployed</span>\n                    &nbsp;\n                    <span>\n                      <DeployedDate />\n                    </span>\n                  </span>\n                ) : (\n                  <span>&nbsp;</span>\n                )}\n              </div>\n              <div>\n                <span>\n                  React v\n                  {version}\n                </span>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </footer>\n  );\n};\n\nFooter.propTypes = {\n  repo: PropTypes.shape({\n    pushed_at: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default connect(reducer, dispatcher)(Footer);\n","import React from 'react';\n\nconst GridUtil = () => (\n  <div id=\"bootstrap-grid-util\" className=\"position-absolute\">\n    <span className=\"d-sm-none\">XS</span>\n    <span className=\"d-none d-sm-block d-md-none\">SM</span>\n    <span className=\"d-none d-md-block d-lg-none\">MD</span>\n    <span className=\"d-none d-lg-block d-xl-none\">LG</span>\n    <span className=\"d-none d-xl-block d-xxl-none\">XL</span>\n    <span className=\"d-none d-xxl-block\">XXL</span>\n  </div>\n);\n\nexport default GridUtil;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport dispatcher from './store/dispatchers';\nimport reducer from './store/reducers';\nimport PageCv from './pages/pageCv/PageCv';\nimport PageContact from './pages/pageContact/PageContact';\nimport Footer from './components/Footer';\nimport GridUtil from './components/GridUtil';\nimport './css/main.css';\n\n// import Logo from './components/Logo';\n\nconst URL_DATA = '/data.json';\nconst URL_REPO = 'https://api.github.com/repos/mnvmn/mnvmn.github.io';\n\nclass App extends Component {\n  componentDidMount() {\n    const { receivedCvData, receivedRepoData } = this.props;\n    fetch(URL_REPO)\n      .then((response) => {\n        // console.log(response)\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('fetch repo failed');\n      })\n      .then((data) => receivedRepoData(data));\n\n    fetch(URL_DATA)\n      .then((response) => {\n        if (response.ok) {\n          return response.json();\n        }\n        throw new Error('fetch data failed');\n      })\n      .then((data) => receivedCvData(data));\n    // .catch(error => ));\n  }\n\n  render() {\n    return (\n      <div className=\"App  d-flex flex-column\">\n        <GridUtil />\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={PageCv} />\n            <Route exact path=\"/contact\" component={PageContact} />\n          </Switch>\n        </BrowserRouter>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  receivedCvData: PropTypes.func.isRequired,\n  receivedRepoData: PropTypes.func.isRequired,\n};\n\nexport default connect(reducer, dispatcher)(App);\n","import { createStore } from 'redux';\n\nimport reducers from './reducers';\n\nfunction loadLocal() {\n  const hasLocalStorage = typeof Storage !== 'undefined';\n\n  return {\n    navbarOpen: hasLocalStorage && localStorage.getItem('navbarOpen') === 'true',\n    lang: hasLocalStorage ? localStorage.getItem('lang') : null,\n    isAsc: hasLocalStorage ? localStorage.getItem('isAsc') === 'true' : false,\n  };\n}\n\nconst settings = loadLocal();\nconst defaultState = {\n  repo: {\n    pushed_at: '',\n  },\n  data: {\n    info: [],\n    education: [],\n    work: [],\n    contact: null,\n  },\n  isLoading: false,\n  navbarOpen: settings.isAsc !== null ? !!settings.navbarOpen : false,\n  isAsc: settings.isAsc !== null ? !!settings.isAsc : true,\n  lang: settings.lang !== null ? settings.lang : 'en',\n};\n\nexport default createStore(reducers, defaultState);\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then((params) => {\n      const {\n        getCLS, getFID, getFCP, getLCP, getTTFB,\n      } = params;\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/main.css';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store/store';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n    ,\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}